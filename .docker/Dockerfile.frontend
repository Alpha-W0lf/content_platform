# --- Build Stage ---
FROM node:18.17.0 AS builder
WORKDIR /app

# Copy configuration files first
COPY src/frontend/package*.json ./
COPY src/frontend/tsconfig*.json ./
COPY src/frontend/postcss.config.js ./
COPY src/frontend/tailwind.config.js ./
COPY src/frontend/next.config.js ./
COPY src/frontend/components.json ./

# Clean install dependencies with exact versions
RUN npm clean-install

# Create necessary directories
RUN mkdir -p ./public

# Copy source code
COPY src/frontend/app ./app
COPY src/frontend/components ./components
COPY src/frontend/lib ./lib
COPY src/frontend/styles ./styles
COPY src/frontend/types ./types
COPY src/frontend/middleware.ts ./
COPY src/frontend/public/. ./public/

# Set build environment variables
ENV NEXT_TELEMETRY_DISABLED=1
ENV NODE_ENV=production
ENV NEXT_PUBLIC_API_URL=http://api:8000

# Build the application
RUN npm run build

# --- Runtime Stage ---
FROM node:18.17.0-slim
WORKDIR /app

# Copy package files and install only production dependencies
COPY --from=builder /app/package*.json ./
RUN npm clean-install --omit=dev

# Copy built application and necessary files
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public
COPY --from=builder /app/next.config.js ./next.config.js
COPY --from=builder /app/package.json ./package.json

# Set runtime environment variables
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# These will be overridden by docker-compose, but setting defaults here
ENV NEXT_PUBLIC_API_URL=http://api:8000
ENV NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=""
ENV NEXT_PUBLIC_CLERK_SIGN_IN_URL=/sign-in
ENV NEXT_PUBLIC_CLERK_SIGN_UP_URL=/sign-up
ENV NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=/
ENV NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=/

EXPOSE 3000

CMD ["node", "node_modules/.bin/next", "start"]
